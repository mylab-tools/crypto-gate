lua_package_path '/app/libs/?.lua;/app/configs/?.lua;;';

init_by_lua_block {
	
	local config = require "myauth-config"
	config.load("/app/configs/auth-config.lua")

	local secrets = require "myauth-secrets"
	secrets.load("/app/configs/auth-secrets.lua")

	a = require "myauth"
	a.initialize(config, secrets)

	target_server = os.getenv("TARGET_SERVER")
	settings_sign = os.getenv("SERVICE_SIGN")
}

server {
	listen 80;
	server_name default_server;

	error_page 403 404 500 502 504 @route_error;

	location / {

		set $target_server '';
		
		access_by_lua_block {

			a.authorize()

			ngx.var.target_server = target_server
			ngx.exit(ngx.OK)

		}

		include /etc/nginx/snippets/default-location.conf;

		proxy_pass_request_headers on;
		resolver 127.0.0.11 ipv6=off;
		proxy_pass http://$target_server;
	}

	location @route_error{
    
		set $service_sign 'myauth-proxy';
		
		access_by_lua_block {

			if service_sign ~= nil
				ngx.var.service_sign = service_sign

		}

		add_header X-Service $service_sign always;

		return 200;
	}
}